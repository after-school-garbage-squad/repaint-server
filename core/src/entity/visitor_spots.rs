//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "visitor_spots")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub visitor_id: i32,
    pub last_scanned_at: DateTime,
    pub last_picked_at: Option<DateTime>,
    pub created_at: DateTime,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::visitors::Entity",
        from = "Column::VisitorId",
        to = "super::visitors::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Visitors,
}

impl Related<super::visitors::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Visitors.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
