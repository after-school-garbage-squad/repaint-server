//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "events_admins")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub admin_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub event_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::admins::Entity",
        from = "Column::AdminId",
        to = "super::admins::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Admins,
    #[sea_orm(
        belongs_to = "super::events::Entity",
        from = "Column::EventId",
        to = "super::events::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Events,
}

impl Related<super::admins::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Admins.def()
    }
}

impl Related<super::events::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Events.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
